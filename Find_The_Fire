import cv2
import numpy as np
import playsound

Fire_report = 0;
# smoke_cascade=cv2.CascadeClassifier('myhaar.xml')
Alarm_status = False


def alert():
    playsound.playsound('C:/Users/LENOVO/Downloads/House Fire Alarm - Sound Effect.mp3')


video = cv2.VideoCapture('F:/3rd sem all pdf/SGP(fire and smoke detector)/1.jpg')
#F:\3rd sem all pdf\SGP(fire and smoke detector)

lower = [18, 50, 50]
upper = [35, 255, 255]
lower_smoke = [105, 1, 150]
upper_smoke = [110, 50, 255]
while True:
    ret, frame = video.read()
    danger = 10000
    if ret == False:
        break

    frame = cv2.resize(frame, (500, 300))
    blur = cv2.GaussianBlur(frame, (15, 15), 0)
    hsv = cv2.cvtColor(blur, cv2.COLOR_BGR2HSV)
    lower = np.array(lower, dtype='uint8')
    upper = np.array(upper, dtype='uint8')
    lower_smoke = np.array(lower_smoke, dtype='uint8')
    upper_smoke = np.array(upper_smoke, dtype='uint8')
    smoke_mask = cv2.inRange(hsv, lower_smoke, upper_smoke)
    output_smoke = cv2.bitwise_and(frame, hsv, mask=smoke_mask)
    mask = cv2.inRange(blur, lower, upper)
    output = cv2.bitwise_and(frame, blur, mask=mask)
    cv2.imshow('frame', frame)
    cv2.waitKey(0)
    #cv2.imshow('mask', mask)
    #cv2.waitKey(0)
    cv2.imshow('output', output)
    cv2.waitKey(0)
    size = cv2.countNonZero(mask)
    size_smoke = cv2.countNonZero(smoke_mask)
    print(size_smoke, size)
    if size >= 10000 or size_smoke >= 5000:
        Fire_report = 1
    if Fire_report >= 1:
        if Alarm_status == False:
            alert()
            Alarm_status = True
            if cv2.waitKey(1) == 13:
                break
cv2.waitKey(0)
cv2.destroyAllWindows()
